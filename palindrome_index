#include <bits/stdc++.h>

using namespace std;

// Complete the palindromeIndex function below.
int palindromeIndex(string S) {
    const auto mid = next(begin(S), S.size()/2); 
const auto diffIt = mismatch(begin(S), mid, rbegin(S)).first;
const auto diffIdx = distance(begin(S), diffIt); // diffIt as 0-based position

if (equal(next(diffIt), mid, next(rbegin(S), diffIdx))) 
  return diffIdx;
else
  return (S.size() - diffIdx - 1);


}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        int result = palindromeIndex(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}
